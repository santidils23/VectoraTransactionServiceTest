server:
  port: 8082

spring:
  application:
    name: transaction-service
  datasource:
    url: jdbc:mysql://transaction-mysql:3306/transactiondb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: root
    password: rootpassword
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 120000
      connection-timeout: 30000
  flyway:
    enabled: true
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: transaction-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topic:
      transaction-events: transaction-events
      transaction-results: transaction-results
    listener:
      missing-topics-fatal: false
  # Este setting es para evitar el error de dependencia circular
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true

service:
  account:
    url: http://account-service:8081

admin:
  username: admin
  password: password

# Configuraci√≥n JWT - IMPORTANTE: Debe coincidir con la del servicio de cuentas
jwt:
  secret: TuClaveSecretaLargaParaFirmarTokensDebeSerMuySegura123456789
  expiration: 86400  # En segundos (24 horas)
  token-prefix: "Bearer "
  header: "Authorization"

logging:
  level:
    com.bankdemo: INFO
    org.springframework: WARN
    org.apache.kafka: WARN
    org.hibernate: WARN
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,kafka
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    kafka:
      enabled: true

resilience4j:
  circuitbreaker:
    instances:
      accountService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10